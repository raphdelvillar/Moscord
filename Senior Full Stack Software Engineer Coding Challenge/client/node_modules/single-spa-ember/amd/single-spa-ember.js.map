{"version":3,"sources":["../src/single-spa-ember.js"],"names":["singleSpaEmber","loadEmberApp","defaultOpts","App","createOpts","userOpts","Error","opts","bootstrap","bind","mount","unmount","Promise","resolve","then","applicationInstance","create","destroy","appName","appUrl","vendorUrl","reject","scriptVendor","document","createElement","src","async","onload","loadApp","onerror","head","appendChild","scriptEl","window","require"],"mappings":";;;;;;mBAOwBA,c;SAwDRC,Y,GAAAA,Y;;;;;;;;;;;;;;;;;;;;;;AA/DhB,KAAMC,cAAc;AACnB;AACAC,OAAK,IAFc;AAGnB;AACAC,cAAY,EAJO,CAIH;AAJG,EAApB;;AAOe,UAASJ,cAAT,CAAwBK,QAAxB,EAAkC;AAChD,MAAI,QAAOA,QAAP,yCAAOA,QAAP,OAAoB,QAAxB,EAAkC;AACjC,SAAM,IAAIC,KAAJ,oDAAN;AACA;;AAED,MAAMC,oBACFL,WADE,EAEFG,QAFE,CAAN;;AAKA,MAAI,CAACE,KAAKJ,GAAV,EAAe;AACd,SAAM,IAAIG,KAAJ,4CAAN;AACA;;AAED,MAAIC,KAAKH,UAAL,IAAmB,QAAOG,KAAKH,UAAZ,MAA2B,QAAlD,EAA4D;AAC3D,SAAM,IAAIE,KAAJ,+EAAN;AACA;;AAED,SAAO;AACNE,cAAWA,UAAUC,IAAV,CAAe,IAAf,EAAqBF,IAArB,CADL;AAENG,UAAOA,MAAMD,IAAN,CAAW,IAAX,EAAiBF,IAAjB,CAFD;AAGNI,YAASA,QAAQF,IAAR,CAAa,IAAb,EAAmBF,IAAnB;AAHH,GAAP;AAKA;;AAED,UAASC,SAAT,CAAmBD,IAAnB,EAAyB;AACxB,SAAOK,QAAQC,OAAR,EAAP;AACA;;AAED,UAASH,KAAT,CAAeH,IAAf,EAAqB;AACpB,SAAOK,QACLC,OADK,GAELC,IAFK,CAEA,YAAM;AACXP,QAAKQ,mBAAL,GAA2BR,KAAKJ,GAAL,CAASa,MAAT,CAAgBT,KAAKH,UAArB,CAA3B;AACA,GAJK,CAAP;AAKA;;AAED,UAASO,OAAT,CAAiBJ,IAAjB,EAAuB;AACtB,SAAOK,QACLC,OADK,GAELC,IAFK,CAEA,YAAM;AACXP,QAAKQ,mBAAL,CAAyBE,OAAzB;AACAV,QAAKQ,mBAAL,GAA2B,IAA3B;AACA,GALK,CAAP;AAMA;;AAED;;;;;;;;;;AAUO,UAASd,YAAT,CAAsBiB,OAAtB,EAA+BC,MAA/B,EAAyD;AAAA,MAAlBC,SAAkB,uEAAN,IAAM;;AAC/D,SAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUQ,MAAV,EAAqB;AACvC,OAAI,OAAOH,OAAP,KAAmB,QAAvB,EAAiC;AAChCG,WAAO,IAAIf,KAAJ,qEAAP;AACA;AACA;;AAED,OAAI,OAAOa,MAAP,KAAkB,QAAtB,EAAgC;AAC/BE,WAAO,IAAIf,KAAJ,qEAAP;AACA;AACA;;AAED,OAAIc,aAAa,OAAOA,SAAP,KAAqB,QAAtC,EAAgD;AAC/CC,WAAO,IAAIf,KAAJ,gGAAP;AACA;AACA;;AAED,OAAIc,SAAJ,EAAe;AACd,QAAME,eAAeC,SAASC,aAAT,CAAuB,QAAvB,CAArB;AACAF,iBAAaG,GAAb,GAAmBL,SAAnB;AACAE,iBAAaI,KAAb,GAAqB,IAArB;AACAJ,iBAAaK,MAAb,GAAsBC,OAAtB;AACAN,iBAAaO,OAAb,GAAuBR,MAAvB;AACAE,aAASO,IAAT,CAAcC,WAAd,CAA0BT,YAA1B;AACA,IAPD,MAOO;AACNM;AACA;;AAED,YAASA,OAAT,GAAmB;AAClB,QAAMI,WAAWT,SAASC,aAAT,CAAuB,QAAvB,CAAjB;AACAQ,aAASP,GAAT,GAAeN,MAAf;AACAa,aAASN,KAAT,GAAiB,IAAjB;AACAM,aAASL,MAAT,GAAkB,YAAM;AACvBd,aAAQoB,OAAOC,OAAP,CAAehB,UAAQ,MAAvB,CAAR;AACA,KAFD;AAGAc,aAASH,OAAT,GAAmBR,MAAnB;AACAE,aAASO,IAAT,CAAcC,WAAd,CAA0BC,QAA1B;AACA;AACD,GArCM,CAAP;AAsCA","file":"single-spa-ember.js","sourceRoot":"single-spa-ember","sourcesContent":["const defaultOpts = {\n\t// required opts\n\tApp: null,\n\t// Optional opts\n\tcreateOpts: {}, // https://www.emberjs.com/api/ember/2.14.1/classes/Ember.Application\n}\n\nexport default function singleSpaEmber(userOpts) {\n\tif (typeof userOpts !== 'object') {\n\t\tthrow new Error(`single-spa-ember requires a configuration object`);\n\t}\n\n\tconst opts = {\n\t\t...defaultOpts,\n\t\t...userOpts,\n\t};\n\n\tif (!opts.App) {\n\t\tthrow new Error(`single-spa-ember must be passed opts.App`);\n\t}\n\n\tif (opts.createOpts && typeof opts.createOpts !== 'object') {\n\t\tthrow new Error(`single-spa-ember: createOpts must be an object to be passed to App.create()`);\n\t}\n\n\treturn {\n\t\tbootstrap: bootstrap.bind(null, opts),\n\t\tmount: mount.bind(null, opts),\n\t\tunmount: unmount.bind(null, opts),\n\t};\n}\n\nfunction bootstrap(opts) {\n\treturn Promise.resolve();\n}\n\nfunction mount(opts) {\n\treturn Promise\n\t\t.resolve()\n\t\t.then(() => {\n\t\t\topts.applicationInstance = opts.App.create(opts.createOpts);\n\t\t})\n}\n\nfunction unmount(opts) {\n\treturn Promise\n\t\t.resolve()\n\t\t.then(() => {\n\t\t\topts.applicationInstance.destroy();\n\t\t\topts.applicationInstance = null;\n\t\t});\n}\n\n/* This is a helper function that will load an ember app via script tags and then\n * hook into Ember's built-in module registry (window.define/window.require) in order\n * to pass the app module and it's lifecycle functions to single-spa.\n *\n * appName: the name of the ember application. This will be used to window.require(appName + '/app');\n * appUrl: the url to script tag for the ember application.\n * vendorUrl (optional): if provided, the vendor bundle will be loaded first before the application bundle.\n *   This is optional since you could have more than one single-spa applications written in Ember, but only\n *   one vendor bundle.\n */\nexport function loadEmberApp(appName, appUrl, vendorUrl = null) {\n\treturn new Promise((resolve, reject) => {\n\t\tif (typeof appName !== 'string') {\n\t\t\treject(new Error(`single-spa-ember requires an appName string as the first argument`));\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof appUrl !== 'string') {\n\t\t\treject(new Error(`single-spa-ember requires an appUrl string as the second argument`));\n\t\t\treturn;\n\t\t}\n\n\t\tif (vendorUrl && typeof vendorUrl !== 'string') {\n\t\t\treject(new Error(`single-spa-ember vendorUrl (the third argument) is optional, but must be a string if present`));\n\t\t\treturn;\n\t\t}\n\n\t\tif (vendorUrl) {\n\t\t\tconst scriptVendor = document.createElement('script');\n\t\t\tscriptVendor.src = vendorUrl;\n\t\t\tscriptVendor.async = true;\n\t\t\tscriptVendor.onload = loadApp;\n\t\t\tscriptVendor.onerror = reject;\n\t\t\tdocument.head.appendChild(scriptVendor);\n\t\t} else {\n\t\t\tloadApp();\n\t\t}\n\n\t\tfunction loadApp() {\n\t\t\tconst scriptEl = document.createElement('script');\n\t\t\tscriptEl.src = appUrl;\n\t\t\tscriptEl.async = true;\n\t\t\tscriptEl.onload = () => {\n\t\t\t\tresolve(window.require(appName+'/app'));\n\t\t\t}\n\t\t\tscriptEl.onerror = reject;\n\t\t\tdocument.head.appendChild(scriptEl);\n\t\t}\n\t});\n}\n"]}