webpackJsonp([5],{133:function(n,t,r){"use strict";function o(n){return!!location.pathname.startsWith(n)}var i=r(132);r(134),r(336),(0,i.registerApplication)("navbar",function(){return r.e(1).then(r.bind(null,339))},function(){return!0}),(0,i.registerApplication)("iframe-challenge-one",function(){return r.e(3).then(r.bind(null,340))},function(){return o("/javascript-challenge-one")}),(0,i.registerApplication)("iframe-challenge-four",function(){return r.e(4).then(r.bind(null,341))},function(){return o("/javascript-challenge-four")}),(0,i.registerApplication)("news",function(){return r.e(0).then(r.bind(null,342))},function(){return o("/senior-full-stack-software-engineer-coding-challenge")}),(0,i.registerApplication)("footer",function(){return r.e(2).then(r.bind(null,343))},function(){return!0}),(0,i.start)()},336:function(n,t,r){var o=r(337);"string"==typeof o&&(o=[[n.i,o,""]]);var i={hmr:!0};i.transform=void 0;r(131)(o,i);o.locals&&(n.exports=o.locals)},337:function(n,t,r){t=n.exports=r(130)(!1),t.push([n.i,"@import url(https://fonts.googleapis.com/css?family=Open+Sans:300,400,700);",""]),t.push([n.i,"body{background-color:#f8f8ff!important}.layout{background-color:#fff!important}#logo{width:120px;height:31px;background:hsla(0,0%,100%,.2);margin:16px 24px 16px 0;float:left}#content{padding:0 50px}#container{background:hsla(0,0%,100%,.2);margin:16px 0;padding:24px;height:75vh}.table-operations{margin-bottom:16px}.table-operations>button{margin-right:8px}.ant-pagination-item-link .anticon{margin-top:7}#footer{background-color:#001529;color:#fff}",""])}},[133]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,